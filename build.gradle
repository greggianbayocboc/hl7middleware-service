buildscript {
    ext.kotlin_version = '1.2.41'
    ext.kotlinx_html_version = "0.6.4"
    ext.kotlin_frontend_version = "0.0.30"
    ext.react_version = "16.4.0-pre.31-kotlin-$kotlin_version"
    ext.react_dom_version = "16.4.0-pre.31-kotlin-$kotlin_version"
    repositories {
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.31"
    }
}
plugins {
    id 'java'
}

group 'com.hisd3.utils'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
}

apply plugin: 'kotlin2js'
apply plugin: 'kotlin-dce-js'
apply plugin: 'org.jetbrains.kotlin.frontend'


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "com.sparkjava:spark-core:2.7.2"
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.13'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile 'org.apache.httpcomponents:httpclient:4.5.4'
    compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'org.json', name: 'json', version: '20180130'
    compile group: 'com.sparkjava', name: 'spark-kotlin', version: '1.0.0-alpha'
    compile group: 'org.springframework', name: 'spring-web', version: '3.0.4.RELEASE'

    // crisnels lib

    // https://mvnrepository.com/artifact/com.j2html/j2html
    compile group: 'com.j2html', name: 'j2html', version: '0.7'

    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.6'
    //HL7 Library

    compile ('ca.uhn.hapi.fhir:hapi-fhir-base:2.2')
            {
                exclude(module: 'slf4j-log4j12')
            }
    compile ('ca.uhn.hapi.fhir:hapi-fhir-structures-dstu2:2.2')
            {
                exclude(module: 'slf4j-log4j12')
            }
    compile (group: 'ca.uhn.hapi', name: 'hapi-base', version: '2.3')
            {
                exclude(module: 'slf4j-log4j12')
            }
    compile (group: 'ca.uhn.hapi', name: 'hapi-structures-v23', version: '2.3')
                {
                    exclude(module: 'slf4j-log4j12')
                }
    compile (group: 'ca.uhn.hapi', name: 'hapi-structures-v24', version: '2.3')
            {
                exclude(module: 'slf4j-log4j12')
            }
    compile (group: 'ca.uhn.hapi', name: 'hapi-structures-v25', version: '2.3')
            {
                exclude(module: 'slf4j-log4j12')
            }
    compile (group: 'ca.uhn.hapi', name: 'hapi-hl7overhttp', version: '2.3')
            {
                exclude(module: 'slf4j-log4j12')
            }
    compile (group: 'ca.uhn.hapi', name: 'hapi-structures-v26', version: '2.3')
             {
                 exclude(module: 'slf4j-log4j12')
             }
    compile (group: 'ca.uhn.hapi', name: 'hapi-structures-v27', version: '2.3')
    {
                    exclude(module: 'slf4j-log4j12')
                }
    compile (group: 'ca.uhn.hapi', name: 'hapi-structures-v28', version: '2.3')
    {
                    exclude(module: 'slf4j-log4j12')
                }

    //SMB Credentials
    compile (group: 'jcifs', name: 'jcifs', version: '1.3.17')
            {
                exclude(module:'servlet-api')
            }
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    //
    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.2.1'
    // https://mvnrepository.com/artifact/com.github.eirslett/frontend-maven-plugin
    compile group: 'com.github.eirslett', name: 'frontend-maven-plugin', version: '1.6'

}


mainClassName = 'com.hisd3.utils.ApplicationKt'
jar {

    baseName = 'hl7middleware'
    version =  version
    archiveName = 'hl7middleware.jar'
    manifest {
        attributes 'Implementation-Title' : 'HISD3 App Hl7 Middleware',
                'Implementation-Version': version
    }

    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'com.hisd3.utils.ApplicationKt'
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}


task generateNewVersionFile{
    delete "${project.projectDir}/src/main/resources/VERSION"
    def outputDir = file("${project.projectDir}/src/main/resources/")
    new File(outputDir, "VERSION").write("$project.version")
}

kotlinFrontend {
    downloadNodeJsVersion = "latest"

    npm {
//        dependency("kotlin", "1.1.0")
        dependency "style-loader" // production dependency
        dependency "react"
        dependency "react-dom"
        dependency "kotlin"
        dependency "@jetbrains/kotlin-extensions"
        dependency "@jetbrains/kotlin-react"
    }

    webpackBundle {
        bundleName = "main"
        contentPath = file('src/main/web')
//        mode = 'development'
        mode = 'production'
    }

    define "PRODUCTION", false
    define "X", false

//    rollupBundle {
//        bundleName = "rolledUp"
//    }

//    allBundles {
//        /* set properties for all bundles */
//    }

//    bundle("someBundler") {
//        ....
//    }
}

compileKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
    kotlinOptions.main = "call"
}

compileTestKotlin2Js {
    kotlinOptions.metaInfo = true
    kotlinOptions.outputFile = "$project.buildDir.path/js-tests/${project.name}-tests.js"
    kotlinOptions.sourceMap = true
    kotlinOptions.moduleKind = 'commonjs'
//    kotlinOptions.moduleName = project.name + "-test"
    kotlinOptions.main = "call"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}
processResources{
    dependsOn generateNewVersionFile
}
